// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyTracker2.Data;

#nullable disable

namespace MoneyTracker2.Migrations
{
    [DbContext(typeof(MoneyTrackerContext))]
    partial class MoneyTrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("MoneyTracker2.Models.EntityModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MoneyTracker2.Models.EntityModels.CategoryRegex", b =>
                {
                    b.Property<string>("Regex")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Regex");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryRegexes");
                });

            modelBuilder.Entity("MoneyTracker2.Models.EntityModels.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MoneyTracker2.Models.EntityModels.Category", b =>
                {
                    b.HasOne("MoneyTracker2.Models.EntityModels.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("MoneyTracker2.Models.EntityModels.CategoryRegex", b =>
                {
                    b.HasOne("MoneyTracker2.Models.EntityModels.Category", "Category")
                        .WithMany("Regexes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoneyTracker2.Models.EntityModels.Transaction", b =>
                {
                    b.HasOne("MoneyTracker2.Models.EntityModels.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoneyTracker2.Models.EntityModels.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Regexes");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
